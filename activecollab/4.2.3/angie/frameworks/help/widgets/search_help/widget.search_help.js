(function($){var public_methods={init:function(options,notifications){return this.each(function(){var wrapper=$(this);var search_timeout;var search_url=wrapper.find("form.search_help_form").attr("action");var search_field=wrapper.find("form.search_help_form input");var search_results=wrapper.find("div.search_help_results");var last_performed_query="";var perform_search=function(query){if(query&&query.length&&last_performed_query!=query){last_performed_query=query;$.ajax({type:"get",url:App.extendUrl(search_url,{q:query}),success:function(response){search_results.empty();if(jQuery.isArray(response)&&response.length==2){var results=response[0];var count=response[1];if(count>0){if(count==1){var message=App.lang("Search returned one result")}else{var message=App.lang("Search returned :count results",{count:count})}search_results.stop().slideDown("fast",function(){var to_append="<h3>"+message+":</h3><ol>";App.each(results,function(k,v){to_append+='<li><a href="'+App.clean(v.permalink)+'">'+App.clean(v.name)+"</a></li>"});search_results.append(to_append+"</ol>")})}else{search_results.stop().slideDown("fast",function(){search_results.append('<p class="empty_page">'+App.lang("No Results for: :query",{query:query})+"</p>")})}}},error:function(){search_results.empty();search_results.stop().slideDown("fast",function(){search_results.append('<p class="empty_page">'+App.lang("An error occured. Please try again later")+"</p>")})}})}else{if(!query){search_results.stop().slideUp("fast",function(){search_results.hide()})}}};search_field.on("keydown click change",function(event){if(search_timeout){clearTimeout(search_timeout);search_timeout=0}if(event.type=="keydown"&&event.which==13){perform_search($.trim(search_field.val()));return false}else{search_timeout=setTimeout(function(){perform_search($.trim(search_field.val()))},350)}})})}};var plugin_name="searchHelp";$.fn[plugin_name]=function(method){if(public_methods[method]){return public_methods[method].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof method==="object"||!method){return public_methods.init.apply(this,arguments)}else{$.error("Method "+method+" does not exist in jQuery."+plugin_name)}}}})(jQuery);